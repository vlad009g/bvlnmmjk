// –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –ø–æ–µ–∑–¥–æ–∫
let users = JSON.parse(localStorage.getItem('users')) || [];
let currentUser = JSON.parse(localStorage.getItem('currentUser')) || null;
let trips = JSON.parse(localStorage.getItem('trips')) || [];

// –ü–æ–∫–∞–∑ —Å–µ–∫—Ü–∏–∏
function showSection(id) {
    document.querySelectorAll('.section').forEach(section => section.classList.remove('active'));
    document.getElementById(id).classList.add('active');
}

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
function register() {
    const email = document.getElementById('authEmail').value.trim();
    const password = document.getElementById('authPassword').value.trim();

    if (!email || !password) {
        alert('–í–≤–µ–¥–∏—Ç–µ email –∏ –ø–∞—Ä–æ–ª—å!');
        return;
    }

    if (users.some(user => user.email === email)) {
        alert('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');
        return;
    }

    users.push({ email, password });
    localStorage.setItem('users', JSON.stringify(users));
    alert('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –¢–µ–ø–µ—Ä—å –≤–æ–π–¥–∏—Ç–µ.');
}

// –í—Ö–æ–¥
function login() {
    const email = document.getElementById('authEmail').value.trim();
    const password = document.getElementById('authPassword').value.trim();

    const user = users.find(user => user.email === email && user.password === password);

    if (user) {
        currentUser = user;
        localStorage.setItem('currentUser', JSON.stringify(currentUser));
        document.getElementById('authStatus').innerText = `–í—ã –≤–æ—à–ª–∏ –∫–∞–∫: ${currentUser.email}`;
        updateHistory();
        alert('–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    } else {
        alert('–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å!');
    }
}

// –ü–æ–¥—Å—á–µ—Ç —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞
function calculateFuel() {
    const distance = parseFloat(document.getElementById('distance').value);
    const fuel = parseFloat(document.getElementById('fuel').value);

    if (isNaN(distance) || isNaN(fuel) || distance <= 0 || fuel <= 0) {
        alert('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è!');
        return;
    }

    const consumption = (fuel / distance) * 100;
    document.getElementById('result').innerHTML = `üöó <strong>–†–∞—Å—Ö–æ–¥:</strong> ${consumption.toFixed(2)} –ª/100–∫–º`;

    if (currentUser) {
        trips.push({ user: currentUser.email, distance, fuel, date: new Date() });
        localStorage.setItem('trips', JSON.stringify(trips));
        updateHistory();
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–µ–∑–¥–æ–∫
function updateHistory() {
    const historyList = document.getElementById('historyList');
    historyList.innerHTML = trips
        .filter(trip => currentUser && trip.user === currentUser.email)
        .map(trip => `<li>${new Date(trip.date).toLocaleDateString()}: ${trip.distance} –∫–º ‚Äî ${trip.fuel} –ª</li>`)
        .join('');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
function init() {
    if (currentUser) {
        document.getElementById('authStatus').innerText = `–í—ã –≤–æ—à–ª–∏ –∫–∞–∫: ${currentUser.email}`;
        updateHistory();
    }
}

init();


